# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - package
  - release

build:       # This job runs in the build stage, which runs first.
  stage: build
  tags: ["remarkable"]
  script:
    - echo "Building..."
    - cmake -S . -B output --preset "Release Native" -U RMKIT_EXTERN
    - cmake --build output --target rempack
    - echo "Compile complete."
  artifacts:
    paths:
      - output/

upload package:
  stage: package
  image: curlimages/curl:latest
  dependencies:
    - build
  tags:
    - docker
  # uploads the output zip to package registry for semi-permanent retention
  script:
    - FILENAME="rempack"
    - URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/rempack/${CI_COMMIT_TAG}/${FILENAME}"

    - 'curl --fail-with-body --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "output/${FILENAME}" "${URL}"'
  only:
    - tags # Run this job only for tag commits

release:
  stage: release
  tags:
    - docker
  only:
    - tags # Run this job only for tag commits
  dependencies:
    - upload package
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - FILENAME=rempack
    - URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/rempack/${CI_COMMIT_TAG}/${FILENAME}"
    - echo $FILENAME
    - echo $URL
    - echo "running release_job for ${CI_COMMIT_TAG}"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: "Rempack binary: [${FILENAME}](${URL})\n${CI_COMMIT_MESSAGE}"
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: "${FILENAME}"
          url: "${URL}"
